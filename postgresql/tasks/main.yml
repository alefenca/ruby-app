
- name: "Install packages"
  ansible.builtin.yum:
    name:
      - postgresql
      - postgresql-server
    state: present


- name: "Install Python packages"
  ansible.builtin.pip:
    name: psycopg2
    executable: pip3
    state: present

- name: "Find out if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/var/lib/pgsql/data/pg_hba.conf"
  register: postgres_data

- name: Ensure PostgreSQL database is initialized.
  command: "/usr/bin/initdb -D /var/lib/pgsql/data"
  when: not postgres_data.stat.exists
  become: true
  become_user: "postgres"
  vars:
    ansible_ssh_pipelining: true

- name: "Reload postgres"
  ansible.builtin.service:
    name: "postgresql"
    state: "reloaded"

- name: "Create app database"
  vars:
    - ansible_python_interpreter: /usr/bin/python3
  ansible.builtin.postgresql_db:
    state: present
    name: "{{ db_name }}"
    login_user: postgres

- name: "Create db user"
  vars:
    - ansible_python_interpreter: /usr/bin/python3
  ansible.builtin.postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    login_user: postgres

- name: "Grant db user access to app db"
  vars:
    - ansible_python_interpreter: /usr/bin/python3
  ansible.builtin.postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    grant_option: no
    privs: all
    login_user: postgres


- name: "Reload postgres"
  ansible.builtin.service:
    name: "postgresql"
    state: "reloaded"



